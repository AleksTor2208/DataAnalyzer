@model IEnumerable<WebApplication1.Models.StartEndDateTemplate>

@{
    ViewBag.Title = "Details";
}

<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/3.0.0/jquery.min.js"></script>
<script rel="javascript" type="text/javascript" href="js/jquery-1.11.3.min.js"></script>
<h2>Details</h2>

<style>
    .logo {
        width: 40px;
        height: 40px;
        position: absolute;
        left: 695px;
        position: relative;
    }

    .validation-popup {
        position: absolute;
        border: 1px solid #f1f1f1;
        right: 50px;
        top: 100px;
    }

    #generate_report {
        left: 700px;
        position: relative;
        /*left: 600px;*/
    }
</style>

<p>



</p>
<table class="table thead-light">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.StrategyName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.StartDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.EndDate)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @*@Html.DisplayFor(modelItem => item.StrategyName)*@
                <label id="hidden_strategy_name_id">@item.StrategyName</label>
                @*<input type="hidden" id="hidden_strategy_name_id" name="hidden_strategy_name" value=item.StrategyName>*@
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StartDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EndDate)
            </td>
        </tr>
    }

</table>

<table>
    <tr>
        <td><img src="~/Content/excel.jfif" class="logo" alt="excel_img"></td>
        <td><a download id="generate_report" class="btn btn-light">Generate Report</a></td>
    </tr>
</table>

<a href="GenerateReportNew" target="_blank" class="btn btn-primary" style="margin-top:20px;">Download Zip</a>

<button type="button" class="validation-button" onclick="openvalidationFormTemplate()">Validate</button>
<div class="validation-popup" id="validationFormTemplate">
    <form action="~/Home/Validate" id="validationForm">
        <label for="sname">Strategy Name:</label>
        <input type="text" id="sname" name="sname"><br>
        <label for="currency">Currency: </label>
        <input type="text" id="currency" name="currency"><br>
        <label for="timeframe">Timeframe: </label>
        <input type="text" id="timeframe" name="timeframe"><br>
        <label for="startDate">StartDate: </label>
        <input type="datetime" id="startDate" name="startDate"><br>
        <label for="endDate">EndDate:</label>
        <input type="datetime" id="endDate" name="endDate"><br>
        <label for="trainPeriod">TrainPeriod:</label>
        <input type="text" id="trainPeriod" name="trainPeriod"><br>
        <label for="validationPeriod">ValidationPeriod:</label>
        <input type="text" id="validationPeriod" name="validationPeriod"><br>
        <input type="submit" id="createAssetSubmitButton" value="submit">
    </form>
</div>

<script>

    var report_generate_el = document.getElementById('generate_report');


    function openvalidationFormTemplate() {
        console.log("I'm in OpenvalidationFormTemplate function!");
        document.getElementById("validationFormTemplate").style.display = "block";
    }

    function download(filename, data) {

        console.log("I'm in download function");
        var blob = new Blob([data], { type: "application/octetstream" });
        var url = window.URL || window.webkitURL;
        link = url.createObjectURL(blob);

        var element = document.createElement('a');
        element.setAttribute('href', link);
        element.setAttribute('download', filename);
        document.body.appendChild(element);
        element.click();
        //document.body.removeChild(element);
    }

    var stratName_global = document.getElementById("hidden_strategy_name_id").innerHTML;

    $("#generate_report").on("click", function () {

        // Data to post
        data = {
            ids: [1, 2, 3, 4, 5]
        };

        console.log("did I ever managed to get here?");
        console.log("strategy global: " + stratName_global);
        stratName = document.getElementById("hidden_strategy_name_id").innerHTML;
        url = "GenerateReport?strategyName=" + stratName;
        console.log("url is: " + url);
        // Use XMLHttpRequest instead of Jquery $ajax
        xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function () {
            console.log("did I ever manage to get that far into ready state?");
            console.log("stratName is: " + stratName);
            console.log("stratName is: " + stratName);
            var a;
            if (xhttp.readyState === 4 && xhttp.status === 200) {
                // Trick for making downloadable link
                a = document.createElement('a');
                a.href = window.URL.createObjectURL(xhttp.response);
                // Give filename you wish to download
                a.download = `${stratName}.zip`;
                a.style.display = 'none';
                document.body.appendChild(a);
                a.click();
            }
        };
        // Post data to URL which handles post request
        xhttp.open('GET', url);
        xhttp.setRequestHeader("Content-Type", "application/octetstream");
        // You should set responseType as blob for binary responses
        xhttp.responseType = 'blob';
        xhttp.send(JSON.stringify(data));
    });



    //report_generate_el.addEventListener('click', function() {

    //
    //    ////var stratNameJson = { "strategyName":  };
    //    var url = "GenerateReport?strategyName=" + stratName.innerHTML;
    //    alert("url is:" + url);

    //    var request = new XMLHttpRequest();
    //    request.addEventListener("load", reqListener);
    //    request.open('GET', url);
    //    request.send();
    //request.responseType = "blob";
    //var req = new XMLHttpRequest();
    //req.open("GET", url);
    //req.responseType = "blob";
    //req.addEventListener("load", function (event) {
    //    console.log("something");
    //    alert("wot ze fag");
    //    var blob = req.response;
    //    var fileName = req.getResponseHeader("fileName") //if you have the fileName header available
    //    var link = document.createElement('a');
    //    link.href = window.URL.createObjectURL(blob);
    //    link.download = fileName;
    //    link.click();
    //});
    //console.log("sending request");
    //req.send();


    //request.addEventListener("load", function (e) {
    //    alert("wot ze fag");
    //    console.log("I'm in load event listener. Request status is: " + request.status);
    //    if (request.status == 200) {
    //        alert("I'm in 200 status response");
    //        /*request.responseType = "blob";*/
    //        var fileName = "test" + ".zip";
    //        console.log("fileName is: " + fileName);
    //        var headers = request.getAllResponseHeaders();
    //        for (var i = 0; i < headers.length; i++) {
    //            console.log("headers:")
    //            console.log(headers[i])
    //        }
    //        download(fileName, request.response);
    //    }
    //});

    ////request.responseType = "application/zip";
    ////xhr.addEventListener("load", function (e) {
    ////    alert("Inside Load event");
    ////    if (e.currentTarget.status < 400) {

    ////        alert("Load callback - success!");
    ////        //var data = xhr.response;
    ////        //download("test.zip", data);
    ////    }
    ////    else
    ////        alert("Load callback - error!");
    ////}, false);
    ////xhr.addEventListener("error", function (e) {
    ////    alert("Error callback");
    ////}, false);

    ////req.onreadystatechange = function () {

    ////    if (req.status == 200)
    ////        alert("request return 200 status");
    ////    else
    ////        alert("Error loading page\n");

    ////};
    //console.log("sending request");

    //});

    function reqListener() {
        console.log("something ++");
        console.log(this.responseText);
    }

</script>

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/bootstrap")
@Styles.Render("~/Content/css")
